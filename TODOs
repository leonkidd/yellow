TODO SourceFiller文件连接未关闭问题

调整filler的设计，使得可以单独被其他程序使用。
将Filler Info的泛型去除， 简单化\



TODO.NOW
1.NTD, 代码里还存在TODO
2.改变info
3.完成Source
4.改变Filler
5.改变FillObject, 解决其中outputstream关闭问题


// ------- v2.0 --------------------------------------------------
将Filler Buffer，即逐条数据写入
将一些不好的泛型设计更改
整理代码

 package cn.heroes.yellow.intercepter;
  
 +import java.io.OutputStream;
 +
  import cn.heroes.yellow.NObject;
 -import cn.heroes.yellow.entity.FillObject;
 -import cn.heroes.yellow.entity.Info;
  
  /**
 - * The <tt>Interceptor</tt> interface should be implemented by all Interceptors.
 - * Handle the data parsed by {@link cn.heroes.yellow.parser.Parser}.
 - * <p>
 - * The <tt>T</tt> is the type of data which is return by <code>over</code>
 - * method and used by {@link cn.heroes.yellow.filler.Filler}. The <tt>F</tt> is
 - * the type of info about object intercepted.
 - * <p/>
 + * The <tt>Intercepter</tt> interface should be implemented by all Intercepters.
 + * Handle the data which parsed by {@link cn.heroes.yellow.parser.Parser}.
   * <p>
 - * 拦截器, 上接<code>Parser</code>, 下接<code>Filler</code>, 只关注标准格式下的内容数据处理,
 + * This is a bridge between {@link cn.heroes.yellow.parser.Parser} and
 + * {@link cn.heroes.yellow.filler.Filler}. 只关注标准格式下的内容数据处理,
   * 具体的处理规则一般由框架使用者的业务逻辑来确定实现.
   * </p>
   * 
   * @author Leon Kidd
 - * @version 1.00, 2014-1-30
 + * @version 1.00, 2014-8-19
   */
 -public interface Intercepter<T, F> extends NObject {
 +public interface Intercepter extends NObject {
  
  	/**
 -	 * 在Parser要开始化析某个内容时调用, 一般是放入一些Parser正要解析的内容主体相关的信息.
 +	 * Invoked at the beginning of parsing with the info of parsing object.
  	 * 
  	 * @param info
 -	 *            信息, 如文件名等
  	 */
 -	void info(Info<F> info);
 +	void begin(Object info);
  
  	/**
 -	 * Invoke when the parsing is over, and return the data for filling.
 +	 * Invoked at the ending of parsing, and return the
 +	 * {@link java.io.OutputStream} for {@link cn.heroes.yellow.filler.Filler}.
  	 * 
 -	 * @return the <code>FillObject</code> object. It contain the data to fill
 -	 *         and the information about saving media. Can also return null if
 -	 *         you don't want to fill.
 -	 * @see cn.heroes.yellow.filler.Filler
 +	 * @return the OutputStream to fill
  	 */
 -	FillObject<T> over();
 +	OutputStream end();
  }